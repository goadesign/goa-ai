// Code generated by goa v3.22.2, DO NOT EDIT.
//
// grpcstream endpoints
//
// Command:
// $ goa gen example.com/assistant/design

package grpcstream

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "grpcstream" service endpoints.
type Endpoints struct {
	ListItems      goa.Endpoint
	CollectMetrics goa.Endpoint
	Echo           goa.Endpoint
}

// ListItemsEndpointInput holds both the payload and the server stream of the
// "list_items" method.
type ListItemsEndpointInput struct {
	// Payload is the method payload.
	Payload *ListItemsPayload
	// Stream is the server stream used by the "list_items" method to send data.
	Stream ListItemsServerStream
}

// CollectMetricsEndpointInput holds both the payload and the server stream of
// the "collect_metrics" method.
type CollectMetricsEndpointInput struct {
	// Stream is the server stream used by the "collect_metrics" method to send
	// data.
	Stream CollectMetricsServerStream
}

// EchoEndpointInput holds both the payload and the server stream of the "echo"
// method.
type EchoEndpointInput struct {
	// Stream is the server stream used by the "echo" method to send data.
	Stream EchoServerStream
}

// NewEndpoints wraps the methods of the "grpcstream" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ListItems:      NewListItemsEndpoint(s),
		CollectMetrics: NewCollectMetricsEndpoint(s),
		Echo:           NewEchoEndpoint(s),
	}
}

// Use applies the given middleware to all the "grpcstream" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListItems = m(e.ListItems)
	e.CollectMetrics = m(e.CollectMetrics)
	e.Echo = m(e.Echo)
}

// NewListItemsEndpoint returns an endpoint function that calls the method
// "list_items" of service "grpcstream".
func NewListItemsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		ep := req.(*ListItemsEndpointInput)
		return nil, s.ListItems(ctx, ep.Payload, ep.Stream)
	}
}

// NewCollectMetricsEndpoint returns an endpoint function that calls the method
// "collect_metrics" of service "grpcstream".
func NewCollectMetricsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		ep := req.(*CollectMetricsEndpointInput)
		return nil, s.CollectMetrics(ctx, ep.Stream)
	}
}

// NewEchoEndpoint returns an endpoint function that calls the method "echo" of
// service "grpcstream".
func NewEchoEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		ep := req.(*EchoEndpointInput)
		return nil, s.Echo(ctx, ep.Stream)
	}
}
