// Code generated by goa v3.22.2, DO NOT EDIT.
//
// grpcstream service
//
// Command:
// $ goa gen example.com/assistant/design

package grpcstream

import (
	"context"
)

// Service for testing gRPC streaming
type Service interface {
	// List items with server streaming
	ListItems(context.Context, *ListItemsPayload, ListItemsServerStream) (err error)
	// Collect metrics via client stream
	CollectMetrics(context.Context, CollectMetricsServerStream) (err error)
	// Echo service with bidirectional streaming
	Echo(context.Context, EchoServerStream) (err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "assistant"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "1.0"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "grpcstream"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"list_items", "collect_metrics", "echo"}

// ListItemsServerStream allows streaming instances of *ListItemsResult to the
// client.
type ListItemsServerStream interface {
	// Send streams instances of "ListItemsResult".
	Send(*ListItemsResult) error
	SendWithContext(context.Context, *ListItemsResult) error
	// Close closes the stream.
	Close() error
}

// ListItemsClientStream allows streaming instances of *ListItemsResult to the
// client.
type ListItemsClientStream interface {
	Recv() (*ListItemsResult, error)
	RecvWithContext(context.Context) (*ListItemsResult, error)
}

// CollectMetricsServerStream allows streaming instances of
// *CollectMetricsResult to the client.
type CollectMetricsServerStream interface {
	// SendAndClose streams instances of "CollectMetricsResult" and closes the
	// stream.
	SendAndClose(*CollectMetricsResult) error
	SendAndCloseWithContext(context.Context, *CollectMetricsResult) error
	Recv() (*CollectMetricsStreamingPayload, error)
	RecvWithContext(context.Context) (*CollectMetricsStreamingPayload, error)
}

// CollectMetricsClientStream allows streaming instances of
// *CollectMetricsStreamingPayload to the client.
type CollectMetricsClientStream interface {
	// Send streams instances of "CollectMetricsStreamingPayload".
	Send(*CollectMetricsStreamingPayload) error
	SendWithContext(context.Context, *CollectMetricsStreamingPayload) error
	CloseAndRecv() (*CollectMetricsResult, error)
	CloseAndRecvWithContext(context.Context) (*CollectMetricsResult, error)
}

// EchoServerStream allows streaming instances of *EchoResult to the client.
type EchoServerStream interface {
	// Send streams instances of "EchoResult".
	Send(*EchoResult) error
	SendWithContext(context.Context, *EchoResult) error
	Recv() (*EchoStreamingPayload, error)
	RecvWithContext(context.Context) (*EchoStreamingPayload, error)
	// Close closes the stream.
	Close() error
}

// EchoClientStream allows streaming instances of *EchoStreamingPayload to the
// client.
type EchoClientStream interface {
	// Send streams instances of "EchoStreamingPayload".
	Send(*EchoStreamingPayload) error
	SendWithContext(context.Context, *EchoStreamingPayload) error
	Recv() (*EchoResult, error)
	RecvWithContext(context.Context) (*EchoResult, error)
	// Close closes the stream.
	Close() error
}

// CollectMetricsResult is the result type of the grpcstream service
// collect_metrics method.
type CollectMetricsResult struct {
	// Total metrics received
	Count int
	// Average value
	Average float64
}

// CollectMetricsStreamingPayload is the streaming payload type of the
// grpcstream service collect_metrics method.
type CollectMetricsStreamingPayload struct {
	// Metric name
	Metric string
	// Metric value
	Value float64
}

// EchoResult is the result type of the grpcstream service echo method.
type EchoResult struct {
	// Echoed message
	Echo string
	// Echo timestamp
	Timestamp string
}

// EchoStreamingPayload is the streaming payload type of the grpcstream service
// echo method.
type EchoStreamingPayload struct {
	// Message to echo
	Message string
}

// ListItemsPayload is the payload type of the grpcstream service list_items
// method.
type ListItemsPayload struct {
	// Filter criteria
	Filter *string
}

// ListItemsResult is the result type of the grpcstream service list_items
// method.
type ListItemsResult struct {
	// Item ID
	ID string
	// Item name
	Name string
}
