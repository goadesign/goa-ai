// Code generated by goa v3.22.2, DO NOT EDIT.
//
// websocket client
//
// Command:
// $ goa gen example.com/assistant/design

package websocketsvc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "websocket" service client.
type Client struct {
	UploadChunksEndpoint    goa.Endpoint
	UploadDocumentsEndpoint goa.Endpoint
	ChatEndpoint            goa.Endpoint
	InteractiveChatEndpoint goa.Endpoint
}

// NewClient initializes a "websocket" service client given the endpoints.
func NewClient(uploadChunks, uploadDocuments, chat, interactiveChat goa.Endpoint) *Client {
	return &Client{
		UploadChunksEndpoint:    uploadChunks,
		UploadDocumentsEndpoint: uploadDocuments,
		ChatEndpoint:            chat,
		InteractiveChatEndpoint: interactiveChat,
	}
}

// UploadChunks calls the "upload_chunks" endpoint of the "websocket" service.
func (c *Client) UploadChunks(ctx context.Context) (res UploadChunksClientStream, err error) {
	var ires any
	ires, err = c.UploadChunksEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(UploadChunksClientStream), nil
}

// UploadDocuments calls the "upload_documents" endpoint of the "websocket"
// service.
func (c *Client) UploadDocuments(ctx context.Context) (res UploadDocumentsClientStream, err error) {
	var ires any
	ires, err = c.UploadDocumentsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(UploadDocumentsClientStream), nil
}

// Chat calls the "chat" endpoint of the "websocket" service.
func (c *Client) Chat(ctx context.Context) (res ChatClientStream, err error) {
	var ires any
	ires, err = c.ChatEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(ChatClientStream), nil
}

// InteractiveChat calls the "interactive_chat" endpoint of the "websocket"
// service.
func (c *Client) InteractiveChat(ctx context.Context) (res InteractiveChatClientStream, err error) {
	var ires any
	ires, err = c.InteractiveChatEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(InteractiveChatClientStream), nil
}
