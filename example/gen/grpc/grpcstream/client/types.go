// Code generated by goa v3.22.2, DO NOT EDIT.
//
// grpcstream gRPC client types
//
// Command:
// $ goa gen example.com/assistant/design

package client

import (
	grpcstreampb "example.com/assistant/gen/grpc/grpcstream/pb"
	grpcstream "example.com/assistant/gen/grpcstream"
)

// NewProtoListItemsRequest builds the gRPC request type from the payload of
// the "list_items" endpoint of the "grpcstream" service.
func NewProtoListItemsRequest(payload *grpcstream.ListItemsPayload) *grpcstreampb.ListItemsRequest {
	message := &grpcstreampb.ListItemsRequest{
		Filter: payload.Filter,
	}
	return message
}

func NewListItemsResponseListItemsResult(v *grpcstreampb.ListItemsResponse) *grpcstream.ListItemsResult {
	result := &grpcstream.ListItemsResult{
		ID:   v.Id,
		Name: v.Name,
	}
	return result
}

func NewCollectMetricsResponseCollectMetricsResult(v *grpcstreampb.CollectMetricsResponse) *grpcstream.CollectMetricsResult {
	result := &grpcstream.CollectMetricsResult{
		Count:   int(v.Count),
		Average: v.Average,
	}
	return result
}

func NewProtoCollectMetricsStreamingPayloadCollectMetricsStreamingRequest(spayload *grpcstream.CollectMetricsStreamingPayload) *grpcstreampb.CollectMetricsStreamingRequest {
	v := &grpcstreampb.CollectMetricsStreamingRequest{
		Metric: spayload.Metric,
		Value:  spayload.Value,
	}
	return v
}

func NewEchoResponseEchoResult(v *grpcstreampb.EchoResponse) *grpcstream.EchoResult {
	result := &grpcstream.EchoResult{
		Echo:      v.Echo,
		Timestamp: v.Timestamp,
	}
	return result
}

func NewProtoEchoStreamingPayloadEchoStreamingRequest(spayload *grpcstream.EchoStreamingPayload) *grpcstreampb.EchoStreamingRequest {
	v := &grpcstreampb.EchoStreamingRequest{
		Message_: spayload.Message,
	}
	return v
}
