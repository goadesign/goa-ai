// Code generated by goa v3.22.2, DO NOT EDIT.
//
// grpcstream gRPC client CLI support package
//
// Command:
// $ goa gen example.com/assistant/design

package client

import (
	"encoding/json"
	"fmt"

	grpcstreampb "example.com/assistant/gen/grpc/grpcstream/pb"
	grpcstream "example.com/assistant/gen/grpcstream"
)

// BuildListItemsPayload builds the payload for the grpcstream list_items
// endpoint from CLI flags.
func BuildListItemsPayload(grpcstreamListItemsMessage string) (*grpcstream.ListItemsPayload, error) {
	var err error
	var message grpcstreampb.ListItemsRequest
	{
		if grpcstreamListItemsMessage != "" {
			err = json.Unmarshal([]byte(grpcstreamListItemsMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"filter\": \"Voluptatem quia dolorem quo excepturi earum.\"\n   }'")
			}
		}
	}
	v := &grpcstream.ListItemsPayload{
		Filter: message.Filter,
	}

	return v, nil
}
