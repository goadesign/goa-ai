// Code generated by goa v3.21.5, DO NOT EDIT.
//
// assistant endpoints
//
// Command:
// $ goa gen example.com/assistant/design

package assistant

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "assistant" service endpoints.
type Endpoints struct {
	AnalyzeText            goa.Endpoint
	SearchKnowledge        goa.Endpoint
	ExecuteCode            goa.Endpoint
	ListDocuments          goa.Endpoint
	GetSystemInfo          goa.Endpoint
	GetConversationHistory goa.Endpoint
	GeneratePrompts        goa.Endpoint
	RequestCompletion      goa.Endpoint
	GetWorkspaceInfo       goa.Endpoint
	SendNotification       goa.Endpoint
	SubscribeToUpdates     goa.Endpoint
	ProcessBatch           goa.Endpoint
	MonitorResourceChanges goa.Endpoint
	StreamLogs             goa.Endpoint
}

// NewEndpoints wraps the methods of the "assistant" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		AnalyzeText:            NewAnalyzeTextEndpoint(s),
		SearchKnowledge:        NewSearchKnowledgeEndpoint(s),
		ExecuteCode:            NewExecuteCodeEndpoint(s),
		ListDocuments:          NewListDocumentsEndpoint(s),
		GetSystemInfo:          NewGetSystemInfoEndpoint(s),
		GetConversationHistory: NewGetConversationHistoryEndpoint(s),
		GeneratePrompts:        NewGeneratePromptsEndpoint(s),
		RequestCompletion:      NewRequestCompletionEndpoint(s),
		GetWorkspaceInfo:       NewGetWorkspaceInfoEndpoint(s),
		SendNotification:       NewSendNotificationEndpoint(s),
		SubscribeToUpdates:     NewSubscribeToUpdatesEndpoint(s),
		ProcessBatch:           NewProcessBatchEndpoint(s),
		MonitorResourceChanges: NewMonitorResourceChangesEndpoint(s),
		StreamLogs:             NewStreamLogsEndpoint(s),
	}
}

// Use applies the given middleware to all the "assistant" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.AnalyzeText = m(e.AnalyzeText)
	e.SearchKnowledge = m(e.SearchKnowledge)
	e.ExecuteCode = m(e.ExecuteCode)
	e.ListDocuments = m(e.ListDocuments)
	e.GetSystemInfo = m(e.GetSystemInfo)
	e.GetConversationHistory = m(e.GetConversationHistory)
	e.GeneratePrompts = m(e.GeneratePrompts)
	e.RequestCompletion = m(e.RequestCompletion)
	e.GetWorkspaceInfo = m(e.GetWorkspaceInfo)
	e.SendNotification = m(e.SendNotification)
	e.SubscribeToUpdates = m(e.SubscribeToUpdates)
	e.ProcessBatch = m(e.ProcessBatch)
	e.MonitorResourceChanges = m(e.MonitorResourceChanges)
	e.StreamLogs = m(e.StreamLogs)
}

// NewAnalyzeTextEndpoint returns an endpoint function that calls the method
// "analyze_text" of service "assistant".
func NewAnalyzeTextEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*AnalyzeTextPayload)
		return s.AnalyzeText(ctx, p)
	}
}

// NewSearchKnowledgeEndpoint returns an endpoint function that calls the
// method "search_knowledge" of service "assistant".
func NewSearchKnowledgeEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SearchKnowledgePayload)
		return s.SearchKnowledge(ctx, p)
	}
}

// NewExecuteCodeEndpoint returns an endpoint function that calls the method
// "execute_code" of service "assistant".
func NewExecuteCodeEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ExecuteCodePayload)
		return s.ExecuteCode(ctx, p)
	}
}

// NewListDocumentsEndpoint returns an endpoint function that calls the method
// "list_documents" of service "assistant".
func NewListDocumentsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.ListDocuments(ctx)
	}
}

// NewGetSystemInfoEndpoint returns an endpoint function that calls the method
// "get_system_info" of service "assistant".
func NewGetSystemInfoEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.GetSystemInfo(ctx)
	}
}

// NewGetConversationHistoryEndpoint returns an endpoint function that calls
// the method "get_conversation_history" of service "assistant".
func NewGetConversationHistoryEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetConversationHistoryPayload)
		return s.GetConversationHistory(ctx, p)
	}
}

// NewGeneratePromptsEndpoint returns an endpoint function that calls the
// method "generate_prompts" of service "assistant".
func NewGeneratePromptsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GeneratePromptsPayload)
		return s.GeneratePrompts(ctx, p)
	}
}

// NewRequestCompletionEndpoint returns an endpoint function that calls the
// method "request_completion" of service "assistant".
func NewRequestCompletionEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*RequestCompletionPayload)
		return s.RequestCompletion(ctx, p)
	}
}

// NewGetWorkspaceInfoEndpoint returns an endpoint function that calls the
// method "get_workspace_info" of service "assistant".
func NewGetWorkspaceInfoEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.GetWorkspaceInfo(ctx)
	}
}

// NewSendNotificationEndpoint returns an endpoint function that calls the
// method "send_notification" of service "assistant".
func NewSendNotificationEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SendNotificationPayload)
		return nil, s.SendNotification(ctx, p)
	}
}

// NewSubscribeToUpdatesEndpoint returns an endpoint function that calls the
// method "subscribe_to_updates" of service "assistant".
func NewSubscribeToUpdatesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SubscribeToUpdatesPayload)
		return s.SubscribeToUpdates(ctx, p)
	}
}

// NewProcessBatchEndpoint returns an endpoint function that calls the method
// "process_batch" of service "assistant".
func NewProcessBatchEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ProcessBatchPayload)
		return s.ProcessBatch(ctx, p)
	}
}

// NewMonitorResourceChangesEndpoint returns an endpoint function that calls
// the method "monitor_resource_changes" of service "assistant".
func NewMonitorResourceChangesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*MonitorResourceChangesPayload)
		return s.MonitorResourceChanges(ctx, p)
	}
}

// NewStreamLogsEndpoint returns an endpoint function that calls the method
// "stream_logs" of service "assistant".
func NewStreamLogsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*StreamLogsPayload)
		return s.StreamLogs(ctx, p)
	}
}
